# utils/summary_manager.py
import json
import os
from datetime import datetime
from utils.logger import get_logger
from notifications.email_alert import EmailAlert

logger = get_logger(__name__)

SUMMARY_FILE = 'reports/weekly_summary.json'

def update_weekly_summary(results):
    summary_data = []
    if os.path.exists(SUMMARY_FILE):
        with open(SUMMARY_FILE, 'r') as f:
            try:
                summary_data = json.load(f)
            except json.JSONDecodeError:
                summary_data = []

    reachable = len([d for d in results if d['status'] == 'Reachable'])
    unreachable = len([d for d in results if d['status'] == 'Unreachable'])
    avg_latency = round(
        sum([d['latency'] for d in results if d['latency']]) / max(1, reachable), 2
    ) if reachable else 0

    summary_data.append({
        "date": datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
        "total_devices": len(results),
        "reachable": reachable,
        "unreachable": unreachable,
        "avg_latency": avg_latency
    })

    with open(SUMMARY_FILE, 'w') as f:
        json.dump(summary_data, f, indent=4)

def send_weekly_summary(config):
    """Read summary file & email weekly stats."""
    if not os.path.exists(SUMMARY_FILE):
        logger.warning("No weekly summary data found.")
        return

    with open(SUMMARY_FILE, 'r') as f:
        try:
            summary_data = json.load(f)
        except json.JSONDecodeError:
            summary_data = []

    if not summary_data:
        logger.info("No data in weekly summary.")
        return

    html = """
    <h2>Skynet Weekly Summary</h2>
    <table border='1' cellpadding='8' style='border-collapse: collapse;'>
        <thead>
            <tr style='background-color:#333;color:#fff;'>
                <th>Date & Time</th>
                <th>Total Devices</th>
                <th>Reachable</th>
                <th>Unreachable</th>
                <th>Avg Latency (ms)</th>
            </tr>
        </thead>
        <tbody>
    """
    for entry in summary_data:
        html += f"""
            <tr>
                <td>{entry['date']}</td>
                <td>{entry['total_devices']}</td>
                <td>{entry['reachable']}</td>
                <td>{entry['unreachable']}</td>
                <td>{entry['avg_latency']}</td>
            </tr>
        """
    html += "</tbody></table><p><i>Generated by Skynet Â© 2025 Hein+Fricke</i></p>"

    EmailAlert(config['email']).send_custom_email(
        subject="Skynet Weekly Report",
        html_content=html
    )

    # Reset file (optional)
    with open(SUMMARY_FILE, 'w') as f:
        json.dump([], f)
    logger.info("Weekly summary email sent & data cleared.")