# alert/alert_manager.py
from alert.email_alert import EmailAlert

def build_alerts(results, latency_threshold):
    """Return list of devices to alert on."""
    return [
        d for d in results
        if d['status'] == 'Unreachable' or (d['latency'] and d['latency'] > latency_threshold)
    ]

def send_consolidated_alerts(alerts, email_config, attachment=None):
    """Send a single table email for all alerts."""
    if not alerts:
        return

    # Build HTML table
    html = """
    <h2>⚠ Skynet Alert Report</h2>
    <p>The following devices triggered alert conditions:</p>
    <table border="1" cellpadding="6" cellspacing="0" style="border-collapse:collapse;font-family:Arial;font-size:14px;">
        <thead style="background:#333;color:#fff;">
            <tr>
                <th>IP</th>
                <th>Hostname</th>
                <th>Status</th>
                <th>Latency (ms)</th>
                <th>MAC</th>
                <th>Vendor</th>
                <th>Open Ports</th>
            </tr>
        </thead>
        <tbody>
    """
    for d in alerts:
        color = "red" if d['status'] == 'Unreachable' else "orange"
        open_ports = ", ".join(map(str, d['open_ports'])) if d['open_ports'] else "None"
        html += f"""
        <tr>
            <td>{d['ip']}</td>
            <td>{d.get('hostname','Unknown')}</td>
            <td style="color:{color};font-weight:bold;">{d['status']}</td>
            <td>{d['latency'] if d['latency'] is not None else 'N/A'}</td>
            <td>{d.get('mac','Unknown')}</td>
            <td>{d.get('vendor','Unknown')}</td>
            <td>{open_ports}</td>
        </tr>
        """
    html += "</tbody></table><p><i>Generated by Skynet © 2025 Hein+Fricke. All Rights Reserved.</i></p>"

    EmailAlert(email_config).send_custom_email(
        subject=f"Skynet Alert: {len(alerts)} Issue(s) Detected",
        html_content=html,
        attachment=attachment
    )